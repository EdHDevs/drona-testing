{
    "event_name": "button_click",
    "selector": ".control-button",
    "event_type": "click",
    "actionflow_id": "af_Button1_c297R1UHO56CVWS7bNOcQ_button_click_click",
    "next_actions": [
        "RW4WsCVGD1K2mLH0g"
    ],
    "prev_actions": [],
    "actions": [
        {
            "id": "RW4WsCVGD1K2mLH0g",
            "execution_editor_type": "JSEditor",
            "execution_condition_variable_with_name": "",
            "execution_condition_variable": "",
            "execution_environments": [
                "dev",
                "beta",
                "prod"
            ],
            "unique_name": "JSCODE",
            "label": "",
            "wait_till_completion": true,
            "offline_submission": false,
            "downloadas_file": false,
            "fields": {},
            "type": "JSCODE",
            "outputs": [],
            "dual_output_action": false,
            "jscode_params": {
                "dhq_variableList": [],
                "dhq_processingCode": "console.log(\"📄 Starting PDF fetch...\");\n\n  var url = \"https://www.uscis.gov/sites/default/files/document/forms/i-9.pdf\";\n\n  return fetch(url)\n    .then(function (res) {\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch PDF: \" + res.statusText);\n      }\n      return res.arrayBuffer();\n    })\n    .then(function (arrayBuffer) {\n      return PDFLib.PDFDocument.load(arrayBuffer);\n    })\n    .then(function (pdfDoc) {\n      console.log(\"✅ PDF loaded\");\n\n      var form = pdfDoc.getForm();\n      var fields = form.getFields();\n      var fieldNames = [];\n\n      for (var i = 0; i < fields.length; i++) {\n        fieldNames.push(fields[i].getName());\n      }\n\n      console.log(\"🧾 Fields found:\", fieldNames);\n\n      function safeSetText(name, value) {\n        try {\n          form.getTextField(name).setText(value);\n          console.log('✅ Set \"' + name + '\"');\n        } catch (e) {\n          console.warn('⚠️ Could not set \"' + name + '\":', e.message);\n        }\n      }\n\n      // Replace with real field names after inspection\n      safeSetText(\"lastName\", \"Sallusti\");\n      safeSetText(\"firstName\", \"David\");\n      safeSetText(\"address\", \"123 Main St\");\n\n      form.flatten();\n\n      return pdfDoc.save();\n    })\n    .then(function (pdfBytes) {\n      var base64 = uint8ToBase64(new Uint8Array(pdfBytes));\n      console.log(\"✅ PDF encoded to Base64\");\n\n      // Assign to output object\n      output.base64PDF = base64;\n      return output;\n    })\n    .catch(function (err) {\n      console.error(\"❌ Error:\", err.message);\n      output.error = err.message;\n      return output;\n    });\n\n  function uint8ToBase64(uint8Array) {\n    var binary = '';\n    for (var i = 0; i < uint8Array.byteLength; i++) {\n      binary += String.fromCharCode(uint8Array[i]);\n    }\n    return btoa(binary);\n  }\n"
            },
            "next_actions": [
                "end_action_flow"
            ],
            "prev_actions": [],
            "isExecuted": true
        }
    ],
    "category": "",
    "interval": "",
    "action_label": ""
}