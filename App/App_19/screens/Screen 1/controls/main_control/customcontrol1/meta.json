{
    "__dhq_default_formula_Dtype": "string",
    "__dhq_formula_Dtype": "string",
    "__dhq_keywords_mapping_Dtype": "object",
    "__LiveData_Dtype": "string",
    "allow_options_addition_in_editor": true,
    "caching": false,
    "cid": "c117Rfj5iU6e2P0ZPmMvl",
    "class_name": "test",
    "ctrl_id": "",
    "currentData": 0,
    "custom_actions": [],
    "data_submission_enabled": true,
    "data_type": "string",
    "dfmv_selected": "default",
    "dhq_config": {
        "strict_update": [
            "show_new_property",
            "dhq_config"
        ],
        "update_to_theme_varaibles": []
    },
    "dhq_data_process": "",
    "dhq_default_data_process": "",
    "dhq_default_formula": "",
    "dhq_external_css": {
        "addCode": false,
        "data": {}
    },
    "dhq_nsf_replaced": false,
    "dhq_olddt_map": {},
    "dhq_req_stats": {
        "status": ""
    },
    "dhq_show_rawdata": true,
    "dhq_submit_condition": "always",
    "dhq_tfd": true,
    "dhqEvtConverted": true,
    "dhqGrid": {
        "w": 10,
        "h": 35,
        "x": 9,
        "y": 30
    },
    "dhqGridChanged": false,
    "dhqGridDesktop": {
        "w": 10,
        "h": 35,
        "x": 9,
        "y": 30
    },
    "disabled": false,
    "eventMapping": {},
    "field_available_in_database_editor": false,
    "field_composition_type": "single",
    "field_config": {},
    "field_data_model": "",
    "field_data_model_binding_formula": "",
    "field_data_model_binding_manual_query": "DATABUILDER()",
    "field_data_model_binding_manual_query_with_id": "DATABUILDER()",
    "field_data_model_binding_type": "manual_query",
    "field_database_editor_data_format": "single_line_text",
    "field_display_key_name": "customcontrol1",
    "field_editable_in_database_editor": false,
    "field_fullview": false,
    "field_key_name": "dhq_custom_control_c117Rfj5iU6e2P0ZPmMvl",
    "field_options": {
        "options": [
            {
                "code": "demo",
                "id": "action1741618765942"
            }
        ]
    },
    "field_responsive": false,
    "field_type": "dhq_custom_control",
    "field_values_addition_enabled_in_database_editor": true,
    "field_values_source": "",
    "formbuilder_theme": "#bbbbbb",
    "grid_dynamic_height": true,
    "grid_maintain_space": false,
    "grid_max_height": "",
    "grid_max_height_unit": "px",
    "hidden": false,
    "input_control_height": "2.5rem",
    "input_font_color": "var(--DHQ-primary-font-color)",
    "input_font_size": "var(--DHQ-normal-font)",
    "input_font_weight": "var(--DHQ-normal-weight)",
    "input_placeholder_font_weight": "var(--DHQ-normal-weight)",
    "input_placeholder_text_color": "#aaaaaa",
    "input_placeholder_text_size": "var(--DHQ-small-font)",
    "input_type": "single",
    "is_master_control": false,
    "is_outlet_control": false,
    "is_repeat_outlet_control": false,
    "is_variable": false,
    "isDhqGridCtrl": true,
    "isDhqHideOnDesktop": false,
    "isDhqHideOnMobile": false,
    "label": "Custom Control",
    "label_font_size": "var(--DHQ-control-title)",
    "label_font_size_unit": "",
    "label_font_weight": "var(--DHQ-bold)",
    "label_font_weight_class": "font-weight-normal",
    "label_hidden": true,
    "label_left_width": "33",
    "label_left_width_unit": "%",
    "label_position": "top",
    "label_text_alignment": "left",
    "label_text_color": "var(--DHQ-primary-font-color)",
    "parent_id": "",
    "required": false,
    "sb_mode": "JS",
    "show_description": false,
    "show_dfm": false,
    "show_new_property": true,
    "show_tooltip": false,
    "sid": "sc117Rfj5iU6e2P0ZPmMvl",
    "tabIndex": "",
    "textarea_data": "<html>\n  <head>\n<link href=\"/static/fonts/montserrat/Montserrat.css\" rel=\"stylesheet\"></head> \n<style>\n  body{\n    font-family: \"Montserrat\", sans-serif;\n  }\n  .Heading{\n    font-size: 1rem;\n    font-weight: 600;\n  }\n  .doc-tag{\n    position: absolute;\n    right: 1rem;\n    top: 0.7rem;\n    text-decoration: none;\n    font-size: 0.75rem;\n    color: #26bc6a;\n    \n  }\n  p{\n    font-size:0.75rem;\n  }\n  .hilight{\n    text-decoration: none;\n    font-size: 0.75rem;\n    color: #26bc6a;\n  }\n  button{\n    border: 0px;\n    border-radius: 5px;\n    padding:10px;\n    background: #26bc6a;\n    color: white;\n    \n  }\n</style>\n\t\t\n<body>\n  <div class=\"Heading\">Custom Control</div>\n  <a class=\"doc-tag\" href=\"https://docs.dronahq.com/reference/controls/custom-control/\" target=\"_blank\">Read Docs</a>\n  <p>Here is the <span class=\"bindedData hilight\"></span> that you binded to the control you can access it in the <a href=\"https://docs.dronahq.com/reference/controls/custom-control/#pass-data-to-your-custom-control\" class=\"hilight\">setValue</a> callback type </p>\n  <p><b>Counter: <span class=\"counter\">0<span></b></p>\n  <ul>\n    <li><p>Clicking on Trigger Change, you will see counter value passed to control referring custom control</p></li>\n    <li><p>Configure event named demo, that will get trigger on the click of Trigger Event</p></li>\n  </ul>\n  <button class=\"change\">Trigger Change</button> <button class=\"event\">Trigger Demo Event </button> <button class=\"showerror\">Show Error</button> <button class=\"clearerror\">Clear Error</button>\n</body>\n<script>\n  let counter = 0;\n  const callback = function (payload) {\n    if (payload.type == \"initComponent\") {\n    }\n    if (payload.type == \"setValue\") {\n      let data;\n      try{\n        data = JSON.parse(payload.value);\n      }catch(err){\n        data[\"text\"] = \"\";\n      }\n      document.querySelector(\".bindedData\").innerText = data.text;\n    }\n    if (payload.type == \"getValue\") {\n      let val = counter;\n      CI.returnValue(val);\n    }\n    if (payload.type == \"runValidation\") {\n      CI.returnValidationResult(true);\n    }\n  }\n  CI.init(callback);\n  document.addEventListener(\"DOMContentLoaded\", (event) => {\n    document.querySelector(\".change\").addEventListener(\"click\",function(e){\n       counter = counter + 1;\n       document.querySelector(\".counter\").innerText = counter;\n       CI.triggerChange();\n       document.querySelector(\".counter\").innerText = counter;\n    });\n    document.querySelector(\".event\").addEventListener(\"click\",function(e){\n       CI.triggerAction(\"demo\");\n    });\n    document.querySelector(\".showerror\").addEventListener(\"click\",function(e){\n       CI.showError([\"custom error message\"]);\n    });\n    document.querySelector(\".clearerror\").addEventListener(\"click\",function(e){\n       CI.clearError()\n    });\n  });\n</script>\n</html>",
    "tip_description": "",
    "tooltip": "",
    "type": "input",
    "wrapper_content_alignment": "flex-start"
}